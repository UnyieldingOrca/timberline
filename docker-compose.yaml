services:
  etcd:
    container_name: timberline-etcd
    image: quay.io/coreos/etcd:v3.5.18
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 5s
      start_period: 1s
      timeout: 3s
      retries: 5
    networks:
      - timberline

  minio:
    container_name: timberline-minio
    image: minio/minio:RELEASE.2024-05-28T17-19-04Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      start_period: 1s
      timeout: 3s
      retries: 5
    networks:
      - timberline

  milvus:
    container_name: timberline-milvus
    image: milvusdb/milvus:v2.6.1
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      MINIO_REGION: us-east-1
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 10s
      start_period: 3s
      timeout: 5s
      retries: 6
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      etcd:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - timberline

  llama-cpp-embedding:
    container_name: timberline-llama-cpp-embedding
    image: ghcr.io/ggml-org/llama.cpp:server
    command:
      - -m
      - /models/nomic-embed-text-v1.5.f16.gguf
      - --embeddings
      - --host
      - "0.0.0.0"
      - --port
      - "8000"
      - --threads
      - "8"
      - --ctx-size
      - "2048"
    ports:
      - "8000:8000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/llama-models:/models
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8000/health"]
      interval: 5s
      start_period: 2s
      timeout: 3s
      retries: 5
    networks:
      - timberline

  log-ingestor:
    container_name: timberline-log-ingestor
    build:
      context: ./log-ingestor
      dockerfile: Dockerfile
    environment:
      - SERVER_PORT=8080
      - LOG_LEVEL=debug
      - MILVUS_ADDRESS=milvus:19530
      - EMBEDDING_ENDPOINT=http://llama-cpp-embedding:8000/embedding
      - EMBEDDING_MODEL=nomic-embed-text-v1.5
      - EMBEDDING_DIMENSION=768
      - BATCH_SIZE=100
      - BATCH_TIMEOUT=5s
      - MAX_REQUEST_SIZE=10485760
      - METRICS_PORT=9092
      - READ_TIMEOUT=10s
      - WRITE_TIMEOUT=10s
      - RATE_LIMIT_RPS=1000
    ports:
      - "8080:8080"
      - "9092:9092"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/api/v1/healthz"]
      interval: 5s
      start_period: 1s
      timeout: 3s
      retries: 5
    depends_on:
      milvus:
        condition: service_healthy
      llama-cpp-embedding:
        condition: service_healthy
    networks:
      - timberline

  log-collector:
    container_name: timberline-log-collector
    build:
      context: ./log-collector
      dockerfile: Dockerfile
    environment:
      # Log level for the collector application: debug, info, warn, error, fatal, panic
      - LOG_LEVEL=debug
      - LOG_PATHS=/var/log/test-logs/*.log
      - LOG_LEVELS=ERROR,WARN,INFO
      - BUFFER_SIZE=1000
      - FLUSH_INTERVAL=2s
      - FORWARDER_URL=http://log-ingestor:8080/api/v1/logs/batch
      - MAX_BATCH_SIZE=100
      - METRICS_PORT=9090
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/test-logs:/var/log/test-logs:ro
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/metrics"]
      interval: 5s
      start_period: 1s
      timeout: 3s
      retries: 5
    depends_on:
      log-ingestor:
        condition: service_healthy
    networks:
      - timberline

  attu:
    container_name: timberline-attu
    image: zilliz/attu:v2.4.8
    environment:
      MILVUS_URL: milvus:19530
    ports:
      - "3000:3000"
    depends_on:
      milvus:
        condition: service_healthy
    networks:
      - timberline

networks:
  timberline:
    name: timberline
    driver: bridge